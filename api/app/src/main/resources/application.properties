spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.task.scheduling.pool.size=5
spring.jpa.hibernate.ddl-auto=validate
spring.flyway.enabled=true
#security
spring.security.oauth2.client.registration.github.client-id=${PACKIT_GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${PACKIT_GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:org
spring.security.oauth2.client.registration.github.redirect-uri=${PACKIT_API_ROOT}/login/oauth2/code/github
#management
management.server.port=${PACKIT_MANAGEMENT_PORT:8081}
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=health,prometheus
#errors
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
server.error.include-stacktrace=never
# CUSTOM PACKIT CONFIG
#db
outpack.server.url=${PACKIT_OUTPACK_SERVER_URL:http://localhost:8000}
db.url=${PACKIT_DB_URL:jdbc:postgresql://localhost:5432/packit?stringtype=unspecified}
db.user=${PACKIT_DB_USER:packituser}
db.password=${PACKIT_DB_PASSWORD:changeme}
#Auth
auth.jwt.secret=${PACKIT_JWT_SECRET:changesecretkey}
auth.oauth2.redirect.url=${PACKIT_AUTH_REDIRECT_URL:http://localhost:3000/redirect/}
auth.method=${PACKIT_AUTH_METHOD:github}
auth.expiryDays=${PACKIT_JWT_EXPIRY_DAYS:1}
auth.enabled=${PACKIT_AUTH_ENABLED:true}
auth.githubAPIOrg=${PACKIT_AUTH_GITHUB_ORG:mrc-ide}
auth.githubAPITeam=${PACKIT_AUTH_GITHUB_TEAM:packit}
# CORS
cors.allowedOrigins=${PACKIT_CORS_ALLOWED_ORIGINS:http://localhost*,https://localhost*}
# Comma-separated list of roles that are assigned to new users. The roles aren't
# automatically created - an admin needs to create them manually for this setting
# to have any effect.
packit.defaultRoles=${PACKIT_DEFAULT_ROLES:}
# Branding
packit.branding.name=${PACKIT_BRAND_NAME:Packit}
packit.branding.logoAltText=${PACKIT_BRAND_LOGO_ALT_TEXT:${packit.branding.name} logo}
packit.branding.logoLink=${PACKIT_BRAND_LOGO_LINK:}
packit.branding.logoName=${PACKIT_BRAND_LOGO_NAME:}
# Orderly Runner configuration
orderly.runner.enabled=${PACKIT_ORDERLY_RUNNER_ENABLED:true}
orderly.runner.url=${PACKIT_ORDERLY_RUNNER_URL:http://localhost:8001}
orderly.runner.repository.url=${PACKIT_ORDERLY_RUNNER_REPOSITORY_URL:git://localhost:9418/orderly}
orderly.runner.location-url=${PACKIT_ORDERLY_RUNNER_LOCATION_URL:http://localhost:8000}
