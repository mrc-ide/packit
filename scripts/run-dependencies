#!/usr/bin/env bash

set -eu

HERE=$(realpath "$(dirname $0)")
. "$HERE"/common

"$HERE"/../db/scripts/run 

docker exec packit-db wait-for-db

docker network create $NETWORK

docker run --rm -d \
       --net=$NETWORK \
       --name=$REDIS \
       -p 6379:6379 \
       redis

docker volume create $ORDERLY_VOLUME
docker volume create $ORDERLY_REMOTE_VOLUME

docker run -d --pull=missing \
       --name=$DEBUG \
       --net=$NETWORK \
       -v $ORDERLY_VOLUME:$CONTAINER_ORDERLY_ROOT_PATH \
       -v $ORDERLY_REMOTE_VOLUME:$CONTAINER_ORDERLY_REMOTE_ROOT_PATH \
       --entrypoint="/bin/sh" \
       alpine/git \
       -c "sleep infinity"

docker cp $HERE/../demos/orderly/. $DEBUG:$CONTAINER_ORDERLY_REMOTE_ROOT_PATH

docker exec $DEBUG sh -c "mkdir /setup-repo"

docker cp $HERE/common $DEBUG:/setup-repo/.
docker cp $HERE/docker-setup-git-repo $DEBUG:/setup-repo/.

docker exec $DEBUG /setup-repo/docker-setup-git-repo

docker run --pull=always --name outpack_server \
       --net=host \
       -v $ORDERLY_VOLUME:/outpack \
       -v $ORDERLY_REMOTE_VOLUME:$CONTAINER_ORDERLY_REMOTE_ROOT_PATH \
       -p 8000:8000 -d --rm \
       $OUTPACK_SERVER_TAG

docker run --rm -d --pull=always \
       --net=$NETWORK \
       --name=$SERVER \
       --entrypoint="/usr/local/bin/orderly.runner.server" \
       --env=ORDERLY_RUNNER_QUEUE_ID=$ORDERLY_RUNNER_QUEUE_ID \
       --env=REDIS_CONTAINER_NAME=$REDIS \
       -p 8001:8001 \
       -v $ORDERLY_VOLUME:$CONTAINER_ORDERLY_ROOT_PATH \
       $ORDERLY_RUNNER_IMAGE \
       $CONTAINER_ORDERLY_ROOT_PATH

docker run --rm -d --pull=always \
       --net=$NETWORK \
       --name=$WORKER \
       --entrypoint="/usr/local/bin/orderly.runner.worker" \
       --env=ORDERLY_RUNNER_QUEUE_ID=$ORDERLY_RUNNER_QUEUE_ID \
       --env=REDIS_CONTAINER_NAME=$REDIS \
       -v $ORDERLY_VOLUME:$CONTAINER_ORDERLY_ROOT_PATH \
       $ORDERLY_RUNNER_IMAGE \
       $CONTAINER_ORDERLY_ROOT_PATH
